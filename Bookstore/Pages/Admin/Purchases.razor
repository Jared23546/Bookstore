@page "/admin/purchases"
<h1>hi</h1>
@inherits OwningComponentBase<ICheckoutRepository>

<PurchaseTable TableTitle="Uncollected Purchases" checkouts="UncollectedPurchases"
               ButtonLabel="Collected" PurchaseSelected="CollectPurchase"></PurchaseTable>
<PurchaseTable TableTitle="Collected Purchases" checkouts="CollectedPurchases"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x=>UpdateData())">Refresh Data</button>
@code {
    public ICheckoutRepository repo => Service;
    public IEnumerable<Checkout> AllPurchases { get; set; }
    public IEnumerable<Checkout> UncollectedPurchases { get; set; }
    public IEnumerable<Checkout> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Checkout.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.CheckoutRecieved);
        CollectedPurchases = AllPurchases.Where(x => x.CheckoutRecieved);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);
    private void UpdatePurchase (int id, bool purchased)
    {
        Checkout c = repo.Checkout.FirstOrDefault(x => x.CheckoutId == id);
        c.CheckoutRecieved = purchased;
        repo.SaveCheckout(c);
    }

}
